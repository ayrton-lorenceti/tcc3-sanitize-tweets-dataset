AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Globals:
  Function:
    Runtime: python3.7

Resources:
  TCC3StateMachineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  TCC3RuleRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub events.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: RuleExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "events:DeleteRule"
                  - "events:DescribeRule"
                  - "events:PutRule"
                  - "events:PutTargets"
                  - "events:RemoveTargets"
                  - "states:CreateStateMachine"
                  - "states:DescribeStateMachine"
                  - "states:UpdateStateMachine"
                Resource: "*"

  FilterTweetsTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: tcc3-filter-tweets-table
      CodeUri: src
      Handler: lambdas/filter_tweets_table.lambda_handler
      Policies:
        - AmazonDynamoDBReadOnlyAccess
        - AmazonS3FullAccess

  InsertFilteredTweetsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: tcc3-insert-filtered-tweets
      CodeUri: src
      Handler: lambdas/insert_filtered_tweets.lambda_handler
      MemorySize: 254
      Timeout: 30
      Policies:
        - AmazonSSMReadOnlyAccess
        - AmazonDynamoDBFullAccess
  
  RemoveIncompleteTweetsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: tcc3-remove-incomplete-tweets
      CodeUri: src
      Handler: lambdas/remove_incomplete_tweets.lambda_handler
      Policies:
        - "dynamodb:BatchGetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:GetItem"
        - "dynamodb:Scan"

  TCC3StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: TCC3-StateMachine
      DefinitionS3Location:
        Bucket: tcc3bucket
        Key: state_machine.asl.json
      DefinitionSubstitutions:
        FilterTweetsTableFunctionArn: !GetAtt FilterTweetsTableFunction.Arn
        InsertFilteredTweetsFunctionArn: !GetAtt InsertFilteredTweetsFunction.Arn
      RoleArn: !GetAtt TCC3StateMachineRole.Arn

  TCC3StateMachineRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: TCC3-StateMachine-Rule
      ScheduleExpression: "rate(1 minute)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt TCC3StateMachine.Arn
          Id: StateMachineId
          RoleArn: !GetAtt TCC3StateMachineRole.Arn
      RoleArn: !GetAtt TCC3RuleRole.Arn

